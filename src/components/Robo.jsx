/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 robo.gltf 
Author: Zeldrix (https://sketchfab.com/Zeldrix)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/battle-armour-sonar-titan-virlance-ef1b453c53fe4f709c781262fafa8a3e
Title: Battle-Armour Sonar Titan [ Virlance ]
*/

import React, { useEffect, Suspense } from 'react'
import { useGLTF, useTexture, Environment, Stage } from '@react-three/drei'
import * as THREE from 'three'

// Import model using Vite's asset handling
import robotModel from '/robo.gltf'

export default function Model(props) {
  const { nodes, materials } = useGLTF(robotModel)

  // Load all textures with error handling
  const textures = useTexture({
    Material_1: '/textures/Material_1_baseColor.jpeg',
    Material_10: '/textures/Material_10_baseColor.jpeg',
    Material_16: '/textures/Material_16_baseColor.jpeg',
    Material_2: '/textures/Material_2_baseColor.jpeg',
    Material_24: '/textures/Material_24_baseColor.jpeg',
    Material_3: '/textures/Material_3_baseColor.jpeg',
    Material_35: '/textures/Material_35_baseColor.jpeg',
    Material_37: '/textures/Material_37_baseColor.jpeg',
    Material_38: '/textures/Material_38_baseColor.jpeg',
    Material_39: '/textures/Material_39_baseColor.jpeg',
    Material_4: '/textures/Material_4_baseColor.jpeg',
    Material_40: '/textures/Material_40_baseColor.jpeg',
    Material_40_emissive: '/textures/Material_40_emissive.jpeg',
    Material_40_normal: '/textures/Material_40_normal.png',
    Material_6: '/textures/Material_6_baseColor.jpeg',
  }, (error) => {
    console.error('Failed to load texture:', error);
  })

  // Apply textures and enhance materials
  useEffect(() => {
    // Set common material properties for all materials
    Object.values(materials).forEach(material => {
      // Set PBR properties for better metallic look
      material.metalness = 0.8;
      material.roughness = 0.2;
      material.envMapIntensity = 1.2;
      
      // Enable color management
      material.needsUpdate = true;
      if (material.color) {
        material.color.convertSRGBToLinear();
      }
    })

    // Apply specific textures to their corresponding materials
    const materialMappings = {
      Material_1: textures.Material_1,
      Material_2: textures.Material_2,
      Material_3: textures.Material_3,
      Material_4: textures.Material_4,
      Material_6: textures.Material_6,
      Material_10: textures.Material_10,
      Material_16: textures.Material_16,
      Material_24: textures.Material_24,
      Material_35: textures.Material_35,
      Material_37: textures.Material_37,
      Material_38: textures.Material_38,
      Material_39: textures.Material_39,
      Material_40: textures.Material_40,
    }

    // Apply textures with proper encoding
    Object.entries(materialMappings).forEach(([materialName, texture]) => {
      if (materials[materialName] && texture) {
        materials[materialName].map = texture;
        texture.colorSpace = THREE.SRGBColorSpace;
        texture.needsUpdate = true;
        materials[materialName].needsUpdate = true;
      }
    })

    // Special handling for Material_40 with additional maps
    if (materials.Material_40) {
      materials.Material_40.emissiveMap = textures.Material_40_emissive;
      materials.Material_40.normalMap = textures.Material_40_normal;
      materials.Material_40.emissiveIntensity = 1.5;
      materials.Material_40.normalScale = new THREE.Vector2(1, 1);
      materials.Material_40.needsUpdate = true;
    }
  }, [textures, materials])

  return (
    <group {...props} dispose={null}>
      <Stage
        environment="city"
        intensity={1}
        adjustCamera={false}
        contactShadow={{ opacity: 0.5, blur: 2 }}
      >
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_2.geometry} material={materials.Material_14} />
          <mesh geometry={nodes.Object_3.geometry} material={materials.Material_13} />
          <mesh geometry={nodes.Object_4.geometry} material={materials.Material_25} />
          <mesh geometry={nodes.Object_5.geometry} material={materials.Material_18} />
          <mesh geometry={nodes.Object_6.geometry} material={materials.Material_22} />
          <mesh geometry={nodes.Object_7.geometry} material={materials.Material_20} />
          <mesh geometry={nodes.Object_8.geometry} material={materials.Material_19} />
          <mesh geometry={nodes.Object_9.geometry} material={materials.Material_17} />
          <mesh geometry={nodes.Object_10.geometry} material={materials.Material_29} />
          <mesh geometry={nodes.Object_11.geometry} material={materials.Material_16} />
          <mesh geometry={nodes.Object_12.geometry} material={materials.Material_28} />
          <mesh geometry={nodes.Object_13.geometry} material={materials.Material_27} />
          <mesh geometry={nodes.Object_14.geometry} material={materials.Material_37} />
          <mesh geometry={nodes.Object_15.geometry} material={materials.Material_32} />
          <mesh geometry={nodes.Object_16.geometry} material={materials.Material_31} />
          <mesh geometry={nodes.Object_17.geometry} material={materials.Material_33} />
          <mesh geometry={nodes.Object_18.geometry} material={materials.Material_40} />
          <mesh geometry={nodes.Object_19.geometry} material={materials.Material_34} />
          <mesh geometry={nodes.Object_20.geometry} material={materials.Material_5} />
          <mesh geometry={nodes.Object_21.geometry} material={materials.Material_36} />
          <mesh geometry={nodes.Object_22.geometry} material={materials.Material_39} />
          <mesh geometry={nodes.Object_23.geometry} material={materials.Material_30} />
          <mesh geometry={nodes.Object_24.geometry} material={materials.Material_35} />
          <mesh geometry={nodes.Object_25.geometry} material={materials.Material_23} />
          <mesh geometry={nodes.Object_26.geometry} material={materials.Material_24} />
          <mesh geometry={nodes.Object_27.geometry} material={materials.Material_21} />
          <mesh geometry={nodes.Object_28.geometry} material={materials.Material_7} />
          <mesh geometry={nodes.Object_29.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_30.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_31.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_32.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_33.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_34.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_35.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_36.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_37.geometry} material={materials.Material} />
          <mesh geometry={nodes.Object_38.geometry} material={materials.Material_1} />
          <mesh geometry={nodes.Object_39.geometry} material={materials.Material_11} />
          <mesh geometry={nodes.Object_40.geometry} material={materials.Material_10} />
          <mesh geometry={nodes.Object_41.geometry} material={materials.Material_10} />
          <mesh geometry={nodes.Object_42.geometry} material={materials.Material_15} />
          <mesh geometry={nodes.Object_43.geometry} material={materials.Material_12} />
          <mesh geometry={nodes.Object_44.geometry} material={materials.Material_3} />
          <mesh geometry={nodes.Object_45.geometry} material={materials.Material_2} />
          <mesh geometry={nodes.Object_46.geometry} material={materials.Material_2} />
          <mesh geometry={nodes.Object_47.geometry} material={materials.Material_2} />
          <mesh geometry={nodes.Object_48.geometry} material={materials.Material_2} />
          <mesh geometry={nodes.Object_49.geometry} material={materials.Material_2} />
          <mesh geometry={nodes.Object_50.geometry} material={materials.Material_26} />
          <mesh geometry={nodes.Object_51.geometry} material={materials.Material_4} />
          <mesh geometry={nodes.Object_52.geometry} material={materials.Material_8} />
          <mesh geometry={nodes.Object_53.geometry} material={materials.Material_38} />
          <mesh geometry={nodes.Object_54.geometry} material={materials.Material_6} />
          <mesh geometry={nodes.Object_55.geometry} material={materials.Material_9} />
        </group>
      </Stage>
    </group>
  )
}

useGLTF.preload(robotModel)
